        -:    0:Source:../../../../source/m2mconnectionsecurity.cpp
        -:    0:Graph:objs/m2mconnectionsecurity_unit/m2mconnectionsecurity.gcno
        -:    0:Data:objs/m2mconnectionsecurity_unit/m2mconnectionsecurity.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/*
        -:    2: * Copyright (c) 2015 ARM Limited. All rights reserved.
        -:    3: * SPDX-License-Identifier: Apache-2.0
        -:    4: * Licensed under the Apache License, Version 2.0 (the License); you may
        -:    5: * not use this file except in compliance with the License.
        -:    6: * You may obtain a copy of the License at
        -:    7: *
        -:    8: * http://www.apache.org/licenses/LICENSE-2.0
        -:    9: *
        -:   10: * Unless required by applicable law or agreed to in writing, software
        -:   11: * distributed under the License is distributed on an AS IS BASIS, WITHOUT
        -:   12: * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        -:   13: * See the License for the specific language governing permissions and
        -:   14: * limitations under the License.
        -:   15: */
        -:   16:
        -:   17:#include <string.h>
        -:   18:#include "mbed-client/m2mconnectionhandler.h"
        -:   19:#include "mbed-client/m2mconnectionsecurity.h"
        -:   20:#include "mbed-client/m2mtimer.h"
        -:   21:#include "mbed-client/m2msecurity.h"
        -:   22:#include "mbed-client-mbedtls/m2mconnectionsecuritypimpl.h"
        -:   23:
        9:   24:M2MConnectionSecurity::M2MConnectionSecurity(SecurityMode mode)
        -:   25:{
        9:   26:    _private_impl = new M2MConnectionSecurityPimpl(mode);
        9:   27:}
        -:   28:
        9:   29:M2MConnectionSecurity::~M2MConnectionSecurity(){
        9:   30:    delete _private_impl;
        9:   31:}
        -:   32:
        1:   33:void M2MConnectionSecurity::reset(){
        1:   34:    _private_impl->reset();
        1:   35:}
        -:   36:
        1:   37:int M2MConnectionSecurity::init(const M2MSecurity *security){
        1:   38:    return _private_impl->init(security);
        -:   39:}
        -:   40:
        1:   41:int M2MConnectionSecurity::start_connecting_non_blocking(M2MConnectionHandler* connHandler)
        -:   42:{
        1:   43:    return _private_impl->start_connecting_non_blocking(connHandler);
        -:   44:}
        -:   45:
        1:   46:int M2MConnectionSecurity::continue_connecting()
        -:   47:{
        1:   48:    return _private_impl->continue_connecting();
        -:   49:}
        -:   50:
        1:   51:int M2MConnectionSecurity::connect(M2MConnectionHandler* connHandler){
        1:   52:    return _private_impl->connect(connHandler);
        -:   53:}
        -:   54:
        1:   55:int M2MConnectionSecurity::send_message(unsigned char *message, int len){
        1:   56:    return _private_impl->send_message(message, len);
        -:   57:}
        -:   58:
        1:   59:int M2MConnectionSecurity::read(unsigned char* buffer, uint16_t len){
        1:   60:    return _private_impl->read(buffer, len);
        -:   61:}
