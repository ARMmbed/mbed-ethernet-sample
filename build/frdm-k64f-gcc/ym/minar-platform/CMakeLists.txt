# NOTE: This file is generated by yotta: changes will be overwritten!


project(minar-platform)


# include root directories of all components we depend on (directly and
# indirectly, including ourself)
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/minar-platform")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/minar-platform-mbed")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/cmsis-core")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/minar")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/cmsis-core-freescale")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/cmsis-core-k64f")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-drivers")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-freescale")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/ualloc")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/core-util")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/compiler-polyfill")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/dlmalloc")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/minar-platform")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/uvisor-lib")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-k64f")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-frdm-k64f")


# recurse into dependencies that aren't built elsewhere
add_subdirectory(
   "/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/build/frdm-k64f-gcc/ym/minar-platform-mbed"
   "${CMAKE_BINARY_DIR}/ym/minar-platform-mbed"
)



# And others (typically CMSIS implementations) need to export non-system header
# files. Please don't use this facility. Please. It's much, much better to fix
# implementations that import these headers to import them using the full path.
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/cmsis-core/cmsis-core")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal/mbed-hal")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/cmsis-core-k64f/cmsis-core-k64f")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-drivers/mbed")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/common/phyksz8081")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/drivers/clock")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/drivers/enet")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/drivers/interrupt")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/drivers/pit")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/drivers/pit/common")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/adc")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/can")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/dac")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/dmamux")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/dspi")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/edma")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/enet")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/flextimer")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/gpio")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/i2c")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/llwu")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/lptmr")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/lpuart")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/mcg")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/mpu")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/osc")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/pdb")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/pit")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/pmc")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/port")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/rcm")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/rtc")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/sai")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/sdhc")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/sim")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/smc")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/uart")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/hal/wdog")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-ksdk-mcu/mbed-hal-ksdk-mcu/TARGET_KSDK_CODE/utilities")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-k64f/mbed-hal-k64f")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-k64f/mbed-hal-k64f/device")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-k64f/mbed-hal-k64f/MK64F12")
include_directories("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_modules/mbed-hal-frdm-k64f/mbed-hal-frdm-k64f")


# modules with custom CMake build systems may append to the
# YOTTA_GLOBAL_INCLUDE_DIRS property to add compile-time-determined include
# directories:
get_property(GLOBAL_INCLUDE_DIRS GLOBAL PROPERTY YOTTA_GLOBAL_INCLUDE_DIRS)
include_directories(${GLOBAL_INCLUDE_DIRS})

# Provide versions of all the components we depend on, the corresponding
# preprocessor definitions are generated in yotta_config.h
set(YOTTA_MINAR_PLATFORM_MBED_VERSION_STRING "1.0.0")
set(YOTTA_MINAR_PLATFORM_MBED_VERSION_MAJOR 1)
set(YOTTA_MINAR_PLATFORM_MBED_VERSION_MINOR 0)
set(YOTTA_MINAR_PLATFORM_MBED_VERSION_PATCH 0)
set(YOTTA_MINAR_PLATFORM_VERSION_STRING "1.0.0")
set(YOTTA_MINAR_PLATFORM_VERSION_MAJOR 1)
set(YOTTA_MINAR_PLATFORM_VERSION_MINOR 0)
set(YOTTA_MINAR_PLATFORM_VERSION_PATCH 0)

# provide the name of the current module so that it's available to custom CMake
# even if custom CMake does weird things with project()
set(YOTTA_MODULE_NAME minar-platform)

# recurse into subdirectories for this component, using the two-argument
# add_subdirectory because the directories referred to here exist in the source
# tree, not the working directory
add_subdirectory(
    "/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/build/frdm-k64f-gcc/ym/minar-platform/yotta_dummy_lib_minar_platform"
    "${CMAKE_BINARY_DIR}/ym/minar-platform/yotta_dummy_lib_minar_platform"
)

# (not setting YOTTA_MODULE_NAME preprocessor definition as this module doesn't
# have any sources to build)

# include .cmake files provided by the target:
include("/Users/douans01/Documents/workspace/GitHub/yotta_projects/mbed-ethernet-sample/yotta_targets/mbed-gcc/coverage/coverage.cmake")
